#!/usr/bin/python3.5
# -*- coding: utf-8 -*-
from jira import JIRA
import getpass, threading, subprocess


options = {'server': 'https://saeljira.it.here.com/'}

login = input('Enter your login: ')          # Можно захардкодить логин
password = getpass.getpass('Enter your password (hidden): ')    # Можно захардкодить пароль


jira = JIRA(options, basic_auth=('{}'.format(login), '{}'.format(password)))


subprocess.call('clear', shell=True)

print('#############')
print('')
print('Connected')
print('')
print('#############')
print('')
JQL = input('Enter JQL-request: ')
print('')

try:
    maximum = int(input('How many results: '))
except ValueError:
    maximum = 9999
print('')
print('##############')
print('')


def result():
    threading.Timer(90.0, result).start()        # Каждые 90 секунд обновляемся
    subprocess.call('clear', shell=True)
    issues_in_proj = list(jira.search_issues('{}'.format(JQL), maxResults='{}'.format(maximum)))

    print(JQL)
    print('')

    for iss in issues_in_proj:
        issue_summary = iss.fields.summary       # Вытягиваем саммари
        issue_key = iss.key                      # Вытягиваем ключ
#       issue_labels = iss.fields.labels         # Вытягиваем лейблы
        issue_status = iss.fields.status
        print(issue_key, '--', issue_summary)
        print('https://saeljira.it.here.com/browse/{}'.format(issue_key), '--' ,issue_status)
        print('')


def result_wo():
    subprocess.call('clear', shell=True)
    issues_in_proj = list(jira.search_issues('{}'.format(JQL), maxResults='{}'.format(maximum)))

    print(JQL)
    print('')

    for iss in issues_in_proj:
        issue_summary = iss.fields.summary       # Вытягиваем саммари
        issue_key = iss.key                      # Вытягиваем ключ
        issue_labels = iss.fields.labels         # Вытягиваем лейблы
        print(issue_key, '--', issue_summary)


helping = '''
text ~ "search_request"
project = // project in (project1, project2)
issuetype = // issuetype in (issuetype1, issuetype2)
status = // status in (status1, status2)
assignee in (currentUser(), login1, login2)
reporter in (currentUser(), login1, login2)
labels = Testing // labels in (label1, label2)
priority = "0 - Immediate Priority" // priority in ("0 - Immediate Priority", "1 - Very High Priority")
Severity = // Severity in (severity1, severity2)

Priority:              |  Severity:
-----------------------|------------------
0 - Immediate Priority |  Critical
1 - Very High Priority |  Major
2 - High Priority      |  Minor
3 - Medium Priority    |  ShowStopper
4 - Low Priority       |
5 - Undecided          |
'''


result()

